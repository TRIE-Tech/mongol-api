{
  "name": "mongol-api-rest",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/mongol-api-rest/src",
  "projectType": "application",
  "targets": {
    "build": {
      "executor": "@nx/webpack:webpack",
      "outputs": ["{options.outputPath}"],
      "defaultConfiguration": "local",
      "options": {
        "target": "node",
        "compiler": "tsc",
        "outputPath": "dist/apps/mongol-api-rest",
        "main": "apps/mongol-api-rest/src/main.ts",
        "tsConfig": "apps/mongol-api-rest/tsconfig.app.json",
        "assets": ["apps/mongol-api-rest/src/assets"],
        "isolatedConfig": true,
        "webpackConfig": "apps/mongol-api-rest/webpack.config.js",
        "generatePackageJson": true,
        "outputFileName": "index.js"
      },
      "configurations": {
        "development": {},
        "production": {}
      }
    },
    "serve": {
      "executor": "@nx/js:node",
      "defaultConfiguration": "development",
      "options": {
        "buildTarget": "mongol-api-rest:build"
      },
      "configurations": {
        "development": {
          "buildTarget": "mongol-api-rest:build:development"
        },
        "production": {
          "buildTarget": "mongol-api-rest:build:production"
        }
      }
    },
    "lint": {
      "executor": "@nx/linter:eslint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["apps/mongol-api-rest/**/*.ts"]
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
      "options": {
        "jestConfig": "apps/mongol-api-rest/jest.config.ts",
        "passWithNoTests": true,
        "codeCoverage": true
      },
      "configurations": {
        "ci": {
          "ci": true,
          "codeCoverage": true
        }
      }
    },
    "export-env": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "[ -f apps/mongol-api-rest/.env ] && export $(cat apps/mongol-api-rest/.env | xargs) || true"
        ],
        "parallel": false
      }
    },
    "clean": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["rm -rf dist/apps/mongol-api-rest", "rm -rf .vercel"]
      }
    },
    "preview": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "npx nx build mongol-api-rest",
          "cp apps/mongol-api-rest/vercel.json dist/apps/mongol-api-rest",
          "npx dotenv -v VERCEL_ORG_ID=$VERCEL_ORG_ID -v VERCEL_PROJECT_ID=$MONGOL_API_REST_PRO_ID -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
          "mv .vercel dist/apps/mongol-api-rest",
          "cd dist/apps/mongol-api-rest; npx dotenv -v VERCEL_ORG_ID=$VERCEL_ORG_ID -v VERCEL_PROJECT_ID=$MONGOL_API_REST_PRO_ID -- vercel --token=$VERCEL_TOKEN"
        ],
        "parallel": false
      },
      "dependsOn": [
        {
          "target": "clean",
          "params": "forward"
        },
        {
          "target": "export-env"
        }
      ]
    },
    "deploy-prod": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "npx nx build mongol-api-rest",
          "cp apps/mongol-api-rest/vercel.json dist/apps/mongol-api-rest",
          "npx dotenv -v VERCEL_ORG_ID=$VERCEL_ORG_ID -v VERCEL_PROJECT_ID=$MONGOL_API_REST_PRO_ID -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
          "mv .vercel dist/apps/mongol-api-rest",
          "cd dist/apps/mongol-api-rest; npx dotenv -v VERCEL_ORG_ID=$VERCEL_ORG_ID -v VERCEL_PROJECT_ID=$MONGOL_API_REST_PRO_ID -- vercel --prod --token=$VERCEL_TOKEN"
        ],
        "parallel": false
      },
      "dependsOn": [
        {
          "target": "clean",
          "params": "forward"
        },
        {
          "target": "export-env"
        }
      ]
    }
  },
  "tags": ["type:app", "unit-test:ready"]
}
